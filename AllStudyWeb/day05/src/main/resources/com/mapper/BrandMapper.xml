<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapper.BrandMapper">
    <!--  sql片段
     别名和实体类的名称一致
      <sql id="brand_colum">
          id,brand_name as brandName,company_name as companyName , ordered,description,status
      </sql>-->
    <!--别名-->
    <resultMap id="brandResultMap" type="Brand">
        <!--
        id：主键映射
            * column  不一致的名称
            * roperty   需要映射的名称
        result：一般键 映射
        resultMap:  将resultType替换成resultMap
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_Name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
    select  brand_name ,company_name
        from tb_brand;
    </select>
    <!--
   #{}： 防止SQL注入 - -参数传递
   ${}: 拼SQL，存在诸如问题  -  - 表面或者列名不固定的时候
   参数类型：parameterType 可以省略
   特殊字符： 转义字符       CDATA区
    -->
    <!--单条件查询-->
    <select id="selectID" resultMap="brandResultMap">
        select * from tb_brand where id = #{id};
    </select>

    <!--多条件查询-->
    <!--  <select id="selectBymulti" resultMap="brandResultMap">
          select * from
          tb_brand
          where status = #{status}
          and company_name like #{companyName}
          and brand_name like #{brandName};
      </select>-->
    <!--动态多条件查询
        * if
            test :判断语句
    -->
    <select id="selectBymulti" resultMap="brandResultMap">
        select * from
        tb_brand
        -- where 1 = 1 恒等式
        <where>-- Mybatis的包装Where和sql的where语句一致，会自动等判断 是否有 and
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != '' ">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>


    <!--动态单条件查询-->
    <select id="selectBySingle" resultMap="brandResultMap">
        select * from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != '' ">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != '' ">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>

    <!--添加-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
      insert into tb_brand (brand_name, company_name, ordered, description, status)
      values (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>

    <!--动态修改-->
    <update id="updata">
        update tb_brand
        <set>
            <if test="status != null">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != '' ">
                company_name = #{companyName},
            </if>
            <if test="brandName != null and brandName != '' ">
                brand_name = #{brandName},
            </if>
            <if test="ordered != null ">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != '' ">
                description = #{description},
            </if>
            <if test="status != null and status != '' ">
                status = #{status}
            </if>
        </set>
        where id = #{id};
    </update>

    <!--删除-->
    <delete id="deletById">
        delete from tb_brand where id = #{id}
    </delete>
    <!--批量删除-->
    <!--mybatis会将数组参数，封装为一个map对象
        默认 ： array = 数组
        使用@param注解解决map集合默认的key的名称
    -->
    <delete id="deletByIds">
        delete from tb_brand where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>


</mapper>